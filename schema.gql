# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  createdAt: DateTime!
  deletedAt: DateTime
  id: ID!
  language: LanguageType!
  name: String!
  posts(filter: ListPost): [Post!]
  updatedAt: DateTime!
}

input CreateCategory {
  language: LanguageType!
  name: String!
}

input CreatePost {
  category: RefInput!
  content: String!
  sources: [String!]
  title: String!
}

input CreateUser {
  fullName: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteCategory {
  id: ID!
}

input DeletePost {
  id: ID!
}

type JwtResponse {
  token: String!
}

enum LanguageType {
  EN
  TR
}

input ListCategory {
  language: LanguageType!
  query: String
}

input ListPost {
  query: String
}

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  createCategory(payload: CreateCategory!): Category!
  createPost(payload: CreatePost!): Post!
  deleteCategory(payload: DeleteCategory!): Category!
  deletePost(payload: DeletePost!): Post!
  login(payload: LoginInput!): JwtResponse!
  register(payload: CreateUser!): User!
  updateCategory(payload: UpdateCategory!): Category!
  updatePost(payload: UpdatePost!): Post!
}

type Post {
  category: Category!
  content: String!
  createdAt: DateTime!
  deletedAt: DateTime
  id: ID!
  sources: [String!]
  title: String!
  updatedAt: DateTime!
  user: User!
}

type Query {
  categories(filter: ListCategory): [Category!]!
  category(id: Float!): Post!
  currentUser: User!
  post(id: Float!): Post!
  posts(filter: ListPost): [Post!]!
  user(id: Float!): User!
}

input RefInput {
  id: ID!
}

input UpdateCategory {
  id: ID!
  name: String
}

input UpdatePost {
  category: RefInput
  content: String
  id: ID!
  sources: [String!]
  title: String
}

type User {
  createdAt: DateTime!
  deletedAt: DateTime
  fullName: String!
  id: ID!
  posts: [Post!]
  role: UserRole!
  updatedAt: DateTime!
  username: String!
}

enum UserRole {
  Admin
  Mod
  Root
  User
}
